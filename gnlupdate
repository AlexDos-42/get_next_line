#include "get_next_line.h"

#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <stdio.h>

char    *ft_substr(char const *s, unsigned int start, size_t len)
{
        char            *str;
        size_t          i;

        i = 0;
        if (!s)
                return (0);
        if (start > (unsigned int)ft_strlen(s))
                return (NULL);
        if (!(str = malloc(sizeof(char) * (len + 1))))
                return (NULL);
        while (i < len && s[start + i] != '\0')
        {
                str[i] = s[start + i];
                i++;
        }
        str[i] = '\0';
        return (str);
}

void    *ft_calloc(size_t count, size_t size)
{
        void    *str;

        if (count == 0 || size == 0)
        {
                size = 1;
                count = 1;
        }
        if (!(str = malloc(size * count)))
                return (NULL);
        if (size!= 0)
        {
                while (size--)
                        ((unsigned char *)str)[size] = '\0';
        }
        return (str);
}

void    ft_bzero(void *str, size_t n)
{
        char *tab;

        tab = str;
        while (n)
        {
                tab[--n] = '\0';
        }
}

int             get_next_line(int fd, char **line)
{
        char            *buffer;
        int             ret;
        int             i;
        static char     *stock[10240];

        if (fd < 0 || fd > 10240 || BUFFER_SIZE <= 0 || !line || !(buffer = (char *)malloc(sizeof(char ) * (BUFFER_SIZE + 1))))
                return (-1);
        ft_bzero(buffer, BUFFER_SIZE + 1);
        if (!stock[fd])
                stock[fd] = ft_calloc(0,0);
        while (!ft_strchr(buffer, '\n') && (ret = read(fd, buffer, BUFFER_SIZE)))
        {
                if (ret == -1)
                {
                        free(buffer);
                        return (-1);
                }
                buffer[ret] = '\0';
                stock[fd] = ft_strjoin(stock[fd], buffer);
        }
        free(buffer);
        i = 0;
        while (stock[fd][i] && stock[fd][i] != '\n')
                i++;
        *line = ft_substr(stock[fd], 0, i);
        stock[fd] = ft_strdup(stock[fd][i] ? stock[fd] + i + 1 : stock[fd] + i);
        return ((ret > 0 ? 1 : 0) || i);
}


   int          main(int ac, char **av)
   {
   int          fd;
   int          ret;
   int          i;
   char *line;

   if (ac != 2)
   return (0);
   fd = open(av[1], O_RDONLY);
   line = NULL;
   i = 0;
   while ((ret = get_next_line(fd, &line)) > 0)
   {
   printf("%d -> [%s]\n", i, line);
   free(line);
   i++;
   }
   free(line);
   close(fd);
   return (0);
   }
